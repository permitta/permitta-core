name: Build, Test, and Push Docker Image

on:
  push:
    branches: [ main ]
  pull_request:

jobs:
  build-test-push:
    runs-on: ubuntu-latest

    permissions:
      contents: read
      packages: write
      attestations: write

    services:
      postgres:
        image: postgres:16
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Get version
      id: get_version
      run: echo "VERSION=$(cat version.txt)" >> $GITHUB_OUTPUT

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    - name: Build test image
      uses: docker/build-push-action@v4
      with:
        context: .
        load: true
        push: false
        tags: |
          moat-io/moat:${{ steps.get_version.outputs.VERSION }}
          ghcr.io/${{ github.repository_owner }}/moat:${{ steps.get_version.outputs.VERSION }}
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Run OPA tests
      run: |
        # Run OPA tests
        docker run --rm moat-io/moat:${{ steps.get_version.outputs.VERSION }} test opa

    - name: Run Unit tests
      run: |
        # Run unit tests
        docker run --rm --network=host moat-io/moat:${{ steps.get_version.outputs.VERSION }} test unit

    - name: Run CLI tests
      run: |
        # Test CLI functionality
        docker run --rm moat-io/moat:${{ steps.get_version.outputs.VERSION }} --help

    - name: Login to GitHub Container Registry
#      if: github.ref == 'refs/heads/main'
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.repository_owner }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Check if image already exists in registry
#      if: github.ref == 'refs/heads/main'
      id: check_image
      run: |
        IMAGE_EXISTS=$(docker manifest inspect ghcr.io/${{ github.repository_owner }}/moat:${{ steps.get_version.outputs.VERSION }} > /dev/null && echo "true" || echo "false")
        echo "exists=${IMAGE_EXISTS}" >> $GITHUB_OUTPUT
        echo "Checking if image ghcr.io/${{ github.repository_owner }}/moat:${{ steps.get_version.outputs.VERSION }} exists: ${IMAGE_EXISTS}"  

    - name: Push to GitHub Container Registry
      if: steps.check_image.outputs.exists != 'true'
      id: push
      uses: docker/build-push-action@v4
      with:
        context: .
        push: true
        tags: |
          ghcr.io/${{ github.repository_owner }}/moat:${{ steps.get_version.outputs.VERSION }}
          ghcr.io/${{ github.repository_owner }}/moat:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max

    - name: Generate artifact attestation
      if: steps.check_image.outputs.exists != 'true'
      uses: actions/attest-build-provenance@v3
      with:
        subject-name: ghcr.io/${{ github.repository_owner }}/moat:${{ steps.get_version.outputs.VERSION }}
        subject-digest: ${{ steps.push.outputs.digest }}
        push-to-registry: true