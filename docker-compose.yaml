x-logging: &logging
  driver: "json-file"
  options:
    max-size: "10m"
    max-file: "3"

services:
  opa:
    image: openpolicyagent/opa:1.8.0-static
    environment:
      - PERMITTA_BEARER_TOKEN="bearer-token"
    ports:
      - "8181:8181"
    command:
      - "run"
      - "--server"
      - "--watch"
      - "--format=pretty"
      - "--log-level=debug"
      - "--log-format=json-pretty"
      - "--addr=0.0.0.0:8181"
      - "--set=decision_logs.console=true"
      - "--config-file"
      - "/config/policy/config.yaml"
      - "/config/policy/"
    volumes:
      - ./docker/opa:/config
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  lldap:
    image: lldap/lldap:stable
    ports:
      # For LDAP, not recommended to expose, see Usage section.
      - "3890:3890"
      # For LDAPS (LDAP Over SSL), enable port if LLDAP_LDAPS_OPTIONS__ENABLED set true, look env below
      #- "6360:6360"
      # For the web front-end
      - "17170:17170"
    volumes:
      # Alternatively, you can mount a local folder
      - ./instance/lldap:/data
      - ./docker/lldap/bootstrap:/bootstrap
    environment:
      - UID=1000
      - GID=1000
      - TZ=Australia/Melbourne
      - LLDAP_JWT_SECRET=jhgfdfjkhgsdfghlushdvndkfjnsd
      - LLDAP_KEY_SEED=ioajerjgosdfvnsdufghbsiudhgjfdvn
      - LLDAP_LDAP_BASE_DN=dc=example,dc=com

      # envs required for lldap
      - LLDAP_LDAP_USER_EMAIL=admin@example.com
      - LLDAP_LDAP_USER_PASS=changeme

      # envs required for bootstrap.sh
      - LLDAP_URL=http://localhost:17170
      - LLDAP_ADMIN_USERNAME=admin
      - LLDAP_ADMIN_PASSWORD=changeme # same as LLDAP_LDAP_USER_PASS
      - USER_CONFIGS_DIR=/bootstrap/user-configs
      - GROUP_CONFIGS_DIR=/bootstrap/group-configs
      - DO_CLEANUP=true
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  postgres:
    image: postgres:16.2
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_PASSWORD=password
      - POSTGRES_USER=postgres
      - POSTGRES_DB=postgres
    logging: *logging
    volumes:
      - ./docker/postgres/postgres_init_script.sh:/docker-entrypoint-initdb.d/postgres_init_script.sh
      - ./docker/postgres/data:/postgres-data
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U test_user -d permitta" ]
      interval: 10s
      timeout: 5s
      retries: 10
    deploy:
      resources:
        limits:
          cpus: '0.2'
          memory: 256M
        reservations:
          cpus: '0.1'
          memory: 128M

  keycloak:
    build:
      dockerfile: docker/keycloak/Dockerfile
    ports:
      - 8080:8080
    command: [ "start-dev", "--import-realm" ]
    restart: unless-stopped
    environment:
      KC_DB: postgres
      KC_DB_USERNAME: keycloak_user
      KC_DB_PASSWORD: keycloak_password
      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
      KC_METRICS_ENABLED: "true"
      KC_LOG_LEVEL: "INFO"
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
    volumes:
      - ./docker/keycloak/permitta_realm.json:/opt/keycloak/data/import/realm.json:ro
    logging: *logging
    depends_on:
      postgres:
        condition: service_healthy
#    deploy:
#      resources:
#        limits:
#          cpus: '1'
#          memory: 512M
#        reservations:
#          cpus: '0.5'
#          memory: 256M


#  keycloak-realm-export:
#    profiles:
#      - keycloak-export
#    image: keycloak/keycloak:latest
#    ports:
#      - "8080:8080"
#    command: [ "export", "--file", "/opt/keycloak/data/export/permitta-realm.json", "--realm", "permitta"]
#    restart: unless-stopped
#    environment:
#      KC_DB: postgres
#      KC_DB_USERNAME: keycloak_user
#      KC_DB_PASSWORD: keycloak_password
#      KC_DB_URL: "jdbc:postgresql://postgres:5432/keycloak"
#      KC_METRICS_ENABLED: "true"
#      KC_LOG_LEVEL: "INFO"
#      KEYCLOAK_ADMIN: admin
#      KEYCLOAK_ADMIN_PASSWORD: admin
#    volumes:
#      - ./instance/keycloak/data/export:/opt/keycloak/data/export
#    logging: *logging
#    depends_on:
#      keycloak:
#        condition: service_healthy

  trino:
    ports:
      - "8081:8080"
    image: "trinodb/trino:476"
    volumes:
      - ./docker/trino/etc:/etc/trino
      - ./docker/trino/catalog:/etc/trino/catalog
    depends_on:
      postgres:
        condition: service_healthy
    deploy:
      resources:
        limits:
          cpus: '1'
          memory: 1024M
        reservations:
          cpus: '0.5'
          memory: 1024M